    filter()  
    include()
    map()  
    join()  

  <!-- 
      <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Ajouter un Fournisseur</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <!-- Your form for adding supplier information goes here -->
              <form id="addSupplierForm">
                <div class="mb-3">
                  <label for="supplierName" class="form-label">Prenom</label>
                  <input type="text" class="form-control" id="supplierFistName" name="supplierFistName">
              
              
                  <label for="supplierName" class="form-label">Nom</label>
                  <input type="text" class="form-control" id="supplierName" name="supplierName">
                </div>
                <!-- Add more input fields for supplier details if needed -->
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
              <button type="button" class="btn btn-primary" id="saveSupplierButton">Enregistrer</button>
            </div>
          </div>
        </div>
      </div> -->


    /* $categorieController = new CategorieController;
$categorieVenteController = new CategorieVenteController;
$articleConfectionController = new ArticleConfectionController;
$articleVente = new ArticleVenteController;
$approvisionnement = new ApprovisionnementController;
$detailapprovisionnement = new DetailApprovisionnementController;
$production = new ProductionController;
$productionArticle = new ProductionArticleController;
$confectionvente  = new ConfectionVenteController;
$vente = new VenteController;



if(isset($_REQUEST['path'])){
        $path = $_REQUEST['path'];
        if ($path == "categorie") {
            $categorieController->index();
        }elseif ($path == "article_confection"){
            $articleConfectionController->index();  
        }elseif ($path == "categorie_vente"){
            $categorieVenteController->index();
        }elseif ($path == "article_vente"){
               $articleVente->index();
        }elseif ($path == "approvisionnement"){
            $approvisionnement->index();
       } elseif ($path == "detail_approvisionnement"){
             $_SESSION['id'] = $_GET['id'];
             $data = Approvisionnement::find($_SESSION['id']);
              $_SESSION["data"] = $data ; 
             $detailapprovisionnement->index();    
       }elseif ($path == "store-categorie"){
             $categorieController->store();   
        }elseif ($path == "add"){
             $articleConfectionController->create();
        }elseif ($path == "article-store"){
            $articleConfectionController->store();
        }elseif ($path == "filtrer"){
            $approvisionnement->filtre();
         }elseif ($path == "update-paiement-appro"){
            $approvisionnement->updatePaiement();
         }elseif ($path == "add-approvisionnement"){
            $approvisionnement->create();
         }elseif($path == "approvisionnement-store"){   
            $approvisionnement->store();
         }elseif($path == "deleting"){
            $categorieController->delete();
         }elseif($path == "modification-categorie"){
            $_SESSION['id'] = $_GET['id'];
            $categorieController->update();
         }elseif($path == "modification"){
            $categorieController->index();
          }elseif($path == "getdata-store"){
             $approvisionnement->store();
          }elseif($path == "deleting-approvisionnement"){
              $_SESSION['id'] = $_GET['id'];
              $approvisionnement->delete();
         }elseif($path == "production-list"){
              $production->index();
         }elseif($path == "production-add"){
            $production->create();
         }elseif($path == "production-store"){
            $production->store();
         }elseif($path == "delete-line"){
            $production->store();
         }elseif($path == "production-detail"){
               $_SESSION['id'] = $_GET['id'];
               $data = Production::find($_SESSION['id']);
               $_SESSION['data'] = $data;
               $productionArticle->index();
         }elseif($path == "articleVente-add"){
                   $articleVente->create();
         }elseif($path == "vente-store"){
               $articleVente->store();
         }elseif($path == "articleVente-detail"){
              $_SESSION['id'] = $_GET['id'];
             $confectionvente->index();
          }elseif($path == "production-add-java"){
                 $production->productionJava();
          }elseif($path == "vente-list"){
                $vente->index();
           }elseif($path == "vente-add"){
                $vente->create();
           }elseif($path == "confectionvente-store"){
                $confectionvente->store();
           }elseif($path == "confectionvente-add"){
                $confectionvente->create();
           }
       
         
} */  
 <!--   -->  
             <!-- Votre JavaScript -->
<!-- <script>
  document.addEventListener("DOMContentLoaded", function () {
    const categorieSelect = document.getElementById("categorieSelect");
    const newCategoryInput = document.getElementById("newCategoryInput");
    const NewUniteInput = document.getElementById("NewUniteInput");

    const addNewCategoryBtn = document.getElementById("addNewCategoryBtn");
    const AddNewUniteBtn = document.getElementById("AddNewUniteBtn");
    const addCategoryMessage = document.getElementById("addCategoryMessage");
    const AddUniteMessage = document.getElementById("AddUniteMessage");


    addNewCategoryBtn.addEventListener("click", function () {
      const newCategory = newCategoryInput.value.trim();
      if (newCategory !== "") {
        const option = document.createElement("option");
        option.value = newCategory;
        option.textContent = newCategory;
        categorieSelect.appendChild(option);
        newCategoryInput.value = ""; // Réinitialiser l'input
        addCategoryMessage.textContent = "Catégorie ajoutée avec succès!";
      } else {
        addCategoryMessage.textContent = "Veuillez entrer une catégorie valide.";
        AddUniteMessage.textContent = "Veuillez entrer une unité valide.";
      }
    })
    AddNewUniteBtn.addEventListener("click", function () {
      const newUnite = NewUniteInput.value.trim();
      if (newUnite !== "") {
        const option = document.createElement("option");
        option.value = newUnite;
        option.textContent = newUnite;
        uniteSelect.appendChild(option);
        NewUniteInput.value = ""; // Réinitialiser l'input
        addCategoryMessage.textContent = "Catégorie ajoutée avec succès!";
      } else {
        AddUniteMessage.textContent = "Veuillez entrer une unité valide.";
      }
    });
  });
</script> -->
 
             <!-- Categorie Modal -->
<!-- <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Ajouter une categorie</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      
      </div>
      <form novalidate id="categorie">
        <div class="modal-body">
          <div class="mb-3">
            <label for="libelle" class="form-label">Libelle</label>
            <input type="text" class="form-control" id="libelle1">
          </div>
          <div class="col-md-8 mb-3">
            <label for="libelle" class="form-label">Unite par defaut</label>
            <input type="text" class="form-control" id="unitedefaut">
          </div>
          <div class="col-md-2 mb-3 position-absolute conversion">
            <label for="libelle" class="form-label">Conversion</label>
            <input type="text" class="form-control" id="conversion" value="1">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
          <button type="submit" class="btn btn-primary">Enregistrer</button>
        </div>
      </form>
    </div>
  </div>
</div> -->

        <!-- Fournisseur Modal -->
<!-- <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ajouter un fournisseur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form novalidate id="addFournisseur">
        <div class="modal-body">
          <div class="mb-3">
            <label for="libelle" class="form-label">Prenom</label>
            <input type="text" class="form-control" id="prenom">
          </div>
          <div class="mb-3">
            <label for="libelle" class="form-label">Nom</label>
            <input type="text" class="form-control" id="nom">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
          <button type="submit" class="btn btn-primary">Enregistrer</button>
        </div>
      </form>
    </div>
  </div>
</div> -->
        <!-- <script type="text/javascript">
  const selectCategorie= document.querySelector("#selectCategorie")
  const  ConfectionInput = document.querySelector("#ConfectionInput")
  window.addEventListener("load",async function(){
    const selectCategorie = document.querySelector('#selectCategorie')
     await Api.getData("http://localhost:8000/categorie-add-select").then(function (data) {
        data.forEach(element => {
            const option = document.createElement('option');
            option.value = element.id; 
            option.textContent = element.libelle;
            selectCategorie.appendChild(option);
             });
    });

    const selectUnite = document.querySelector('#selectUnite')
    await Api.getData(`${WEB_URL}/unite`).then(function (data) {
       data.forEach(element => {
           const option = document.createElement('option');
           option.value = element.id; 
           option.textContent = element.libelle;
           selectUnite.appendChild(option);
       });
   });


//lister Articles de confections
   await Api.getData(`${WEB_URL}/articleconfection-list`).then(function (data) {
    tbody.innerHTML = ""
    for(let cat of data){
    tbody.innerHTML += `
              <tr class="table">
              <th scope="row">${cat.id}</th>
              <td>${cat.libelle}</td>
              <td>${cat.prixAchat}</td>
              <td>${cat.qteStock}</td>
              <td>${cat.referent}</td>
              <td>
              <div class="action" style="display: flex;justify-content:space-around">
              <a href="">
              <i class="fas fa-solid fa-pen-to-square"></i></a>
              
              <a name="" id="deleteCategorie" class="btn btn-primary" href="#" role="button"
                  > <i class="fas fa-archive" style="color:#002879"></i></a>
              </div>
              </td>
              </tr> 
    `
    }
 });
  
  
 })

 /*  ok.addEventListener("click",function(event){
         
         event.preventDefault();
         if (selectCategorie.value === ""){
         message.innerHTML = "ce champ est obligatoire"
         }else;if (quantite.value === "" || quantite.value <= 0){
         messagequantite.innerHTML = "la valeur saisi est incorrect"
         }else{
            reinitialisation();
             
          }
        
      }) 

      enregistrer.addEventListener("click",function(event){
         event.preventDefault();
         if (ConfectionInput.value === ""){
         messageinput.innerHTML = "ce champ est obligatoire"
         }else{
            reinitialisationVente();     
          }
      })



let reinitialisation = ()=>{
    selectCategorie.value = "";
    quantite.value = "";
};
let reinitialisationVente = ()=>{
    ConfectionInput.value = "";
}
//const myRequest = new Request("http://localhost:8000/confectionvente-add-select");
selectCategorie.addEventListener("click",function(event){

    Request = new Request("http://localhost:8000/categorie-add-select");
    fetch(myRequest)
          .then(response => {
            if (!response.ok) {
              throw new Error(`Erreur HTTP : ${response.status}`);
            }
            return response.json(); 
          })
          .then(data => {
            console.log(data)
            sessionStorage.setItem('data', JSON.stringify(data));
            data.forEach(element => {
            const option = document.createElement('option');
            option.value = element.id; 
            option.textContent = element.libelle;
            selectCategorie.appendChild(option);
              });
            })
          .catch(error => {
            console.error('Erreur :', error);
            });

      })

    </script> */ -->
    /*  document.addEventListener("DOMContentLoaded", function () {
      const confectionInput = document.getElementById("ConfectionInput");
      const prixInput = document.getElementById("validationTooltip02");
      const quantiteInput = document.getElementById("validationTooltip02"); // Utilisez un ID unique ici
      const uniteSelect = document.getElementById("uniteSelect");
      const fournisseurInput = document.getElementById("fournisseur");
      const valideform = document.getElementById("valide");
  
      valideform.addEventListener('click', function (event) {
        let isValid = true;
  
        // Validation pour le champ Confection
        if (confectionInput.value.trim() === "") {
          isValid = false;
          showErrorMessage("Veuillez remplir le champ Articles Confection", confectionInput);
        }
  
        // Validation pour le champ Prix
        if (prixInput.value === "") {
          isValid = false;
          showErrorMessage("Veuillez remplir le champ Prix", prixInput);
        }
  
        // Validation pour le champ Quantité
        if (quantiteInput.value === "") {
          isValid = false;
          showErrorMessage("Veuillez remplir le champ Quantité", quantiteInput);
        }
  
        // Validation pour le champ Unité
        if (uniteSelect.value === "0") {
          isValid = false;
          showErrorMessage("Veuillez choisir une unité", uniteSelect);
        }
  
        // Validation pour le champ Fournisseur
        if (fournisseurInput.value.trim() === "") {
          isValid = false;
          showErrorMessage("Veuillez remplir le champ Fournisseur", fournisseurInput);
        }
  
        // Si la validation a échoué, empêche la soumission du formulaire
        if (!isValid) {
          event.preventDefault();
        }
      });
  
      // Fonction pour afficher un message d'erreur
      function showErrorMessage(message, inputElement) {
        const feedbackMessage = inputElement.parentElement.querySelector(".invalid-feedback");
        feedbackMessage.textContent = message;
        inputElement.classList.add("is-invalid");
      }
    }); */